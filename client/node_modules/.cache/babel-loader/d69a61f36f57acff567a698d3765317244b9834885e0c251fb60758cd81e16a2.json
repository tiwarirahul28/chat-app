{"ast":null,"code":"var _jsxFileName = \"/Users/rahultiwari/GitHub/webchat/chat-app/src/components/Chat.js\";\nimport React from \"react\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatInput from \"./ChatInput\";\nimport ChatContainer from \"./Chatcontainer\"; // corrected component name to ChatContainer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  user,\n  message,\n  messages,\n  setMessage\n}) => {\n  // corrected messages prop name\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(ChatHeader, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative chat-height overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column p-4\",\n        children: messages.map((message, index) => {\n          return message.type === \"UserStatus\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-info\",\n              children: message.userId === user.userId ? \"You have Joined\" : `${message.username} has joined`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this) : null; // added null condition for messages other than UserStatus\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      message: message,\n      setMessage: setMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","ChatHeader","ChatInput","ChatContainer","jsxDEV","_jsxDEV","Chat","user","message","messages","setMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","userId","username","_c","$RefreshReg$"],"sources":["/Users/rahultiwari/GitHub/webchat/chat-app/src/components/Chat.js"],"sourcesContent":["import React from \"react\";\nimport ChatHeader from \"./ChatHeader\";\nimport ChatInput from \"./ChatInput\";\nimport ChatContainer from \"./Chatcontainer\"; // corrected component name to ChatContainer\n\nconst Chat = ({ user, message, messages, setMessage }) => { // corrected messages prop name\n  return (\n    <ChatContainer> {/* corrected component name to ChatContainer */}\n      <ChatHeader user={user} />\n      <div className=\"position-relative chat-height overflow-auto\">\n        <div className=\"d-flex flex-column p-4\">\n          {messages.map((message, index) => {\n            return message.type === \"UserStatus\" ? (\n              <div key={index} className=\"text-center\">\n                <span className=\"badge bg-info\">\n                  {message.userId === user.userId ? (\n                    \"You have Joined\"\n                  ) : (\n                    `${message.username} has joined`\n                  )}\n                </span>\n              </div>\n            ) : null; // added null condition for messages other than UserStatus\n          })}\n        </div>\n      </div>\n      <ChatInput message={message} setMessage={setMessage} />\n    </ChatContainer>\n  );\n};\n\nexport default Chat;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAAE;EAC1D,oBACEL,OAAA,CAACF,aAAa;IAAAQ,QAAA,GAAC,GAAC,eACdN,OAAA,CAACJ,UAAU;MAACM,IAAI,EAAEA;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BV,OAAA;MAAKW,SAAS,EAAC,6CAA6C;MAAAL,QAAA,eAC1DN,OAAA;QAAKW,SAAS,EAAC,wBAAwB;QAAAL,QAAA,EACpCF,QAAQ,CAACQ,GAAG,CAAC,CAACT,OAAO,EAAEU,KAAK,KAAK;UAChC,OAAOV,OAAO,CAACW,IAAI,KAAK,YAAY,gBAClCd,OAAA;YAAiBW,SAAS,EAAC,aAAa;YAAAL,QAAA,eACtCN,OAAA;cAAMW,SAAS,EAAC,eAAe;cAAAL,QAAA,EAC5BH,OAAO,CAACY,MAAM,KAAKb,IAAI,CAACa,MAAM,GAC7B,iBAAiB,GAEhB,GAAEZ,OAAO,CAACa,QAAS;YACrB;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG;UAAC,GAPCG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQV,CAAC,GACJ,IAAI,CAAC,CAAC;QACZ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNV,OAAA,CAACH,SAAS;MAACM,OAAO,EAAEA,OAAQ;MAACE,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEpB,CAAC;AAACO,EAAA,GAxBIhB,IAAI;AA0BV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}